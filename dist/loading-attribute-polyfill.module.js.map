{"version":3,"file":"loading-attribute-polyfill.module.js","sources":["../loading-attribute-polyfill.js"],"sourcesContent":["/*\n * Loading attribute polyfill - https://github.com/mfranzke/loading-attribute-polyfill\n * @license Copyright(c) 2019 by Maximilian Franzke\n * Credits for the initial kickstarter / script to @Sora2455, and supported by @cbirdsong, @eklingen, @DaPo, @nextgenthemes, @diogoterremoto, @dracos, @Flimm, @TomS-, @vinyfc93, @JordanDysart and @denyshutsal - many thanks for that !\n */\n/*\n * A minimal and dependency-free vanilla JavaScript loading attribute polyfill.\n * Supports standard's functionality and tests for native support upfront.\n * Elsewhere the functionality gets emulated with the support of noscript wrapper tags.\n * Use an IntersectionObserver polyfill in case of IE11 support necessary.\n */\n\n'use strict';\n\nvar config = {\n\t// Start download if the item gets within 256px in the Y axis\n\trootMargin: '0px 0px 256px 0px',\n\tthreshold: 0.01,\n\tlazyImage: 'img[loading=\"lazy\"]',\n\tlazyIframe: 'iframe[loading=\"lazy\"]',\n};\n\n// Device/browser capabilities object\nvar capabilities = {\n\tloading:\n\t\t'loading' in HTMLImageElement.prototype &&\n\t\t'loading' in HTMLIFrameElement.prototype,\n\tscrolling: 'onscroll' in window,\n};\n\n// Nodelist foreach polyfill / source: https://developer.mozilla.org/en-US/docs/Web/API/NodeList/forEach#polyfill\nif (window.NodeList && !NodeList.prototype.forEach) {\n\tNodeList.prototype.forEach = Array.prototype.forEach;\n}\n\n// Define according to browsers support of the IntersectionObserver feature (missing e.g. on IE11 or Safari 11)\nvar intersectionObserver;\n\nif ('IntersectionObserver' in window) {\n\tintersectionObserver = new IntersectionObserver(onIntersection, config);\n}\n\n// On using a browser w/o requestAnimationFrame support (IE9, Opera Mini), just run the passed function\nvar rAFWrapper =\n\t'requestAnimationFrame' in window\n\t\t? window.requestAnimationFrame\n\t\t: function (func) {\n\t\t\t\tfunc();\n\t\t  };\n\n/**\n * Put the source and srcset back where it belongs - now that the elements content is attached to the document, it will load now\n * @param {Object} lazyItem Current item to be restored after lazy loading.\n */\nfunction restoreSource(lazyItem) {\n\tvar srcsetItems = [];\n\n\t// Just in case the img is the decendent of a picture element, check for source tags\n\tif (lazyItem.parentNode.tagName.toLowerCase() === 'picture') {\n\t\tremovePlaceholderSource(lazyItem.parentNode);\n\n\t\tsrcsetItems = Array.prototype.slice.call(\n\t\t\tlazyItem.parentNode.querySelectorAll('source')\n\t\t);\n\t}\n\n\tsrcsetItems.push(lazyItem);\n\n\t// Not using .dataset within those upfollowing lines of code for polyfill independent compatibility down to IE9\n\tsrcsetItems.forEach(function (item) {\n\t\tif (item.hasAttribute('data-lazy-srcset')) {\n\t\t\titem.setAttribute('srcset', item.getAttribute('data-lazy-srcset'));\n\t\t\titem.removeAttribute('data-lazy-srcset'); // Not using delete .dataset here for compatibility down to IE9\n\t\t}\n\t});\n\n\tlazyItem.setAttribute('src', lazyItem.getAttribute('data-lazy-src'));\n\tlazyItem.removeAttribute('data-lazy-src'); // Not using delete .dataset here for compatibility down to IE9\n}\n\n/**\n * Remove the source tag preventing the loading of picture assets\n * @param {Object} lazyItemPicture Current <picture> item to be restored after lazy loading.\n */\nfunction removePlaceholderSource(lazyItemPicture) {\n\tvar placeholderSource = lazyItemPicture.querySelector(\n\t\t'source[data-lazy-remove]'\n\t);\n\n\tif (placeholderSource) {\n\t\t// Preferred .removeChild over .remove here for IE\n\t\tlazyItemPicture.removeChild(placeholderSource);\n\t}\n}\n\n/**\n * Handle IntersectionObservers callback\n * @param {Object} entries Target elements Intersection observed changes\n * @param {Object} observer IntersectionObserver instance reference\n */\nfunction onIntersection(entries, observer) {\n\tentries.forEach(function (entry) {\n\t\t// Mitigation for EDGE lacking support of .isIntersecting until v15, compare to e.g. https://github.com/w3c/IntersectionObserver/issues/211#issuecomment-309144669\n\t\tif (entry.intersectionRatio === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If the item is visible now, load it and stop watching it\n\t\tvar lazyItem = entry.target;\n\n\t\tobserver.unobserve(lazyItem);\n\n\t\trestoreSource(lazyItem);\n\t});\n}\n\n/**\n * Handle printing the page\n */\nfunction onPrinting() {\n\tif (typeof window.matchMedia === 'undefined') {\n\t\treturn;\n\t}\n\n\tvar mediaQueryList = window.matchMedia('print');\n\n\tmediaQueryList.addListener(function (mql) {\n\t\tif (mql.matches) {\n\t\t\tdocument\n\t\t\t\t.querySelectorAll(\n\t\t\t\t\tconfig.lazyImage +\n\t\t\t\t\t\t'[data-lazy-src],' +\n\t\t\t\t\t\tconfig.lazyIframe +\n\t\t\t\t\t\t'[data-lazy-src]'\n\t\t\t\t)\n\t\t\t\t.forEach(function (lazyItem) {\n\t\t\t\t\trestoreSource(lazyItem);\n\t\t\t\t});\n\t\t}\n\t});\n}\n\n/**\n * Get and prepare the HTML code depending on feature detection for both image as well as iframe,\n * and if not scrolling supported, because it's a Google or Bing Bot\n * @param {String} lazyAreaHtml Noscript inner HTML code that src-urls need to get rewritten\n */\nfunction getAndPrepareHTMLCode(noScriptTag) {\n\t// The contents of a <noscript> tag are treated as text to JavaScript\n\tvar lazyAreaHtml = noScriptTag.textContent || noScriptTag.innerHTML;\n\n\tvar getImageWidth = lazyAreaHtml.match(/width=['\"](\\d+)['\"]/) || false;\n\tvar temporaryImageWidth = getImageWidth[1] || 1;\n\tvar getImageHeight = lazyAreaHtml.match(/height=['\"](\\d+)['\"]/) || false;\n\tvar temporaryImageHeight = getImageHeight[1] || 1;\n\n\tvar temporaryImage =\n\t\t'data:image/svg+xml,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 ' +\n\t\ttemporaryImageWidth +\n\t\t' ' +\n\t\ttemporaryImageHeight +\n\t\t'%27%3E%3C/svg%3E';\n\n\tif (!capabilities.loading && capabilities.scrolling) {\n\t\t// Check for IntersectionObserver support\n\t\tif (typeof intersectionObserver === 'undefined') {\n\t\t\t// Attach abandonned attribute 'lazyload' to the HTML tags on browsers w/o IntersectionObserver being available\n\t\t\tlazyAreaHtml = lazyAreaHtml.replace(\n\t\t\t\t/(?:\\r\\n|\\r|\\n|\\t| )src=/g,\n\t\t\t\t' lazyload=\"1\" src='\n\t\t\t);\n\t\t} else {\n\t\t\t// Temporarily prevent expensive resource loading by inserting a <source> tag pointing to a simple one (data URI)\n\t\t\tlazyAreaHtml = lazyAreaHtml.replace(\n\t\t\t\t'<source',\n\t\t\t\t'<source srcset=\"' +\n\t\t\t\t\ttemporaryImage +\n\t\t\t\t\t'\" data-lazy-remove=\"true\"></source>\\n<source'\n\t\t\t);\n\n\t\t\t// Temporarily replace a expensive resource load with a simple one by storing the actual source and srcset for later and point src to a temporary replacement (data URI)\n\t\t\tlazyAreaHtml = lazyAreaHtml\n\t\t\t\t.replace(/(?:\\r\\n|\\r|\\n|\\t| )srcset=/g, ' data-lazy-srcset=')\n\t\t\t\t.replace(\n\t\t\t\t\t/(?:\\r\\n|\\r|\\n|\\t| )src=/g,\n\t\t\t\t\t' src=\"' + temporaryImage + '\" data-lazy-src='\n\t\t\t\t);\n\t\t}\n\t}\n\n\treturn lazyAreaHtml;\n}\n\n/**\n * Retrieve the elements from the 'lazy load' <noscript> tag and prepare them for display\n * @param {Object} noScriptTag noscript HTML tag that should get initially transformed\n */\nfunction prepareElement(noScriptTag) {\n\t// Sticking the noscript HTML code in the innerHTML of a new <div> tag to 'load' it after creating that <div>\n\tvar lazyArea = document.createElement('div');\n\n\tlazyArea.innerHTML = getAndPrepareHTMLCode(noScriptTag);\n\n\t// Move all children out of the element\n\twhile (lazyArea.firstChild) {\n\t\tvar actualChild = lazyArea.firstChild;\n\n\t\tif (\n\t\t\t!capabilities.loading &&\n\t\t\tcapabilities.scrolling &&\n\t\t\ttypeof intersectionObserver !== 'undefined' &&\n\t\t\tactualChild.tagName &&\n\t\t\t(actualChild.tagName.toLowerCase() === 'img' ||\n\t\t\t\tactualChild.tagName.toLowerCase() === 'picture' ||\n\t\t\t\tactualChild.tagName.toLowerCase() === 'iframe')\n\t\t) {\n\t\t\tvar observedElement =\n\t\t\t\tactualChild.tagName.toLowerCase() === 'picture'\n\t\t\t\t\t? lazyArea.querySelector('img')\n\t\t\t\t\t: actualChild;\n\t\t\t// Observe the item so that loading could start when it gets close to the viewport\n\t\t\tintersectionObserver.observe(observedElement);\n\t\t}\n\n\t\tnoScriptTag.parentNode.insertBefore(actualChild, noScriptTag);\n\t}\n\n\t// Remove the empty element - not using .remove() here for IE11 compatibility\n\tnoScriptTag.parentNode.removeChild(noScriptTag);\n}\n\n/**\n * Get all the <noscript> tags on the page and setup the printing\n */\nlet prepareElements = () => {\n\tvar lazyLoadAreas = document.querySelectorAll('noscript.loading-lazy');\n\n\tlazyLoadAreas.forEach((element) => prepareElement(element));\n\n\t// Bind for someone printing the page\n\tonPrinting();\n};\n\n// If the page has loaded already, run setup - if it hasn't, run as soon as it has.\n// Use requestAnimationFrame as this will propably cause repaints\n// document.readyState values: https://www.w3schools.com/jsref/prop_doc_readystate.asp\nif (/comp|inter/.test(document.readyState)) {\n\trAFWrapper(prepareElements);\n} else if ('addEventListener' in document) {\n\tdocument.addEventListener('DOMContentLoaded', function () {\n\t\trAFWrapper(prepareElements);\n\t});\n} else {\n\tdocument.attachEvent('onreadystatechange', function () {\n\t\tif (document.readyState === 'complete') {\n\t\t\tprepareElements();\n\t\t}\n\t});\n}\n\nconst loadingAttributePolyfill = {\n\tprepareElement: prepareElement,\n};\n\nexport default loadingAttributePolyfill;\n"],"names":["intersectionObserver","config","rootMargin","threshold","lazyImage","lazyIframe","capabilities","HTMLImageElement","prototype","HTMLIFrameElement","window","NodeList","forEach","Array","IntersectionObserver","entries","observer","entry","intersectionRatio","lazyItem","target","unobserve","restoreSource","rAFWrapper","requestAnimationFrame","func","lazyItemPicture","placeholderSource","srcsetItems","parentNode","tagName","toLowerCase","querySelector","removeChild","slice","call","querySelectorAll","push","item","hasAttribute","setAttribute","getAttribute","removeAttribute","prepareElement","noScriptTag","lazyArea","document","createElement","innerHTML","lazyAreaHtml","textContent","temporaryImage","match","replace","getAndPrepareHTMLCode","firstChild","actualChild","observedElement","observe","insertBefore","prepareElements","element","matchMedia","addListener","mql","matches","test","readyState","addEventListener","attachEvent","loadingAttributePolyfill"],"mappings":"AAcA,IAsBIA,EAtBAC,EAAS,CAEZC,WAAY,oBACZC,UAAW,IACXC,UAAW,sBACXC,WAAY,0BAITC,EAEF,YAAaC,iBAAiBC,WAC9B,YAAaC,kBAAkBD,UAH7BF,EAIQ,aAAcI,OAItBA,OAAOC,WAAaA,SAASH,UAAUI,UAC1CD,SAASH,UAAUI,QAAUC,MAAML,UAAUI,SAM1C,yBAA0BF,SAC7BV,EAAuB,IAAIc,qBA6D5B,SAAwBC,EAASC,GAChCD,EAAQH,QAAQ,SAAUK,GAEzB,GAAgC,IAA5BA,EAAMC,kBAAV,CAKA,IAAIC,EAAWF,EAAMG,OAErBJ,EAASK,UAAUF,GAEnBG,EAAcH,OAzEiDlB,IAIjE,IAAIsB,EACH,0BAA2Bb,OACxBA,OAAOc,sBACP,SAAUC,GACVA,KAOJ,SAASH,EAAcH,GACtB,IA6BgCO,EAC5BC,EA9BAC,EAAc,GAGgC,YAA9CT,EAASU,WAAWC,QAAQC,iBA2B5BJ,GAD4BD,EAzBPP,EAASU,YA0BMG,cACvC,8BAKAN,EAAgBO,YAAYN,GA9B5BC,EAAcf,MAAML,UAAU0B,MAAMC,KACnChB,EAASU,WAAWO,iBAAiB,YAIvCR,EAAYS,KAAKlB,GAGjBS,EAAYhB,QAAQ,SAAU0B,GACzBA,EAAKC,aAAa,sBACrBD,EAAKE,aAAa,SAAUF,EAAKG,aAAa,qBAC9CH,EAAKI,gBAAgB,uBAIvBvB,EAASqB,aAAa,MAAOrB,EAASsB,aAAa,kBACnDtB,EAASuB,gBAAgB,iBAwH1B,SAASC,EAAeC,GAEvB,IAAIC,EAAWC,SAASC,cAAc,OAKtC,IAHAF,EAASG,UAtDV,SAA+BJ,GAE9B,IAAIK,EAAeL,EAAYM,aAAeN,EAAYI,UAOtDG,EACH,qFANmBF,EAAaG,MAAM,yBAA0B,GACzB,IAAM,GAO7C,MANoBH,EAAaG,MAAM,0BAA2B,GACzB,IAAM,GAO/C,mBA6BD,OA3BK9C,GAAwBA,IAI3B2C,OAFmC,IAAzBjD,EAEKiD,EAAaI,QAC3B,2BACA,uBAIDJ,EAAeA,EAAaI,QAC3B,UACA,mBACCF,EACA,iDAKAE,QAAQ,8BAA+B,sBACvCA,QACA,2BACA,SAAWF,EAAiB,qBAKzBF,EAWcK,CAAsBV,GAGpCC,EAASU,YAAY,CAC3B,IAAIC,EAAcX,EAASU,WAE3B,IACEjD,GACDA,QACgC,IAAzBN,GACPwD,EAAY1B,UAC2B,QAAtC0B,EAAY1B,QAAQC,eACkB,YAAtCyB,EAAY1B,QAAQC,eACkB,WAAtCyB,EAAY1B,QAAQC,eACpB,CACD,IAAI0B,EACmC,YAAtCD,EAAY1B,QAAQC,cACjBc,EAASb,cAAc,OACvBwB,EAEJxD,EAAqB0D,QAAQD,GAG9Bb,EAAYf,WAAW8B,aAAaH,EAAaZ,GAIlDA,EAAYf,WAAWI,YAAYW,GAMpC,IAAIgB,EAAkB,WACDd,SAASV,iBAAiB,yBAEhCxB,QAAQ,SAACiD,UAAYlB,EAAekB,UArHjB,IAAtBnD,OAAOoD,YAIGpD,OAAOoD,WAAW,SAExBC,YAAY,SAAUC,GAChCA,EAAIC,SACPnB,SACEV,iBACAnC,EAAOG,UACN,mBACAH,EAAOI,WACP,mBAEDO,QAAQ,SAAUO,GAClBG,EAAcH,QA8Gf,aAAa+C,KAAKpB,SAASqB,YAC9B5C,EAAWqC,GACD,qBAAsBd,SAChCA,SAASsB,iBAAiB,mBAAoB,WAC7C7C,EAAWqC,KAGZd,SAASuB,YAAY,qBAAsB,WACd,aAAxBvB,SAASqB,YACZP,MAKGU,IAAAA,EAA2B,CAChC3B,eAAgBA"}